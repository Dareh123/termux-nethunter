name: Update Nethunter RootFS

on:
  schedule:
    - cron: "0 3 * * *"
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          echo "::notice::Installing Python dependencies..."
          pip install requests

      - name: Run update script
        run: |
          echo "::notice::Running RootFS update script..."
          python scripts/update_rootfs.py

      - name: Read updated version
        id: version
        run: |
          echo "::notice::Reading updated version from install-nethunter.sh..."
          version=$(grep -oP 'VERSION_NAME="\K[^"]+' install-nethunter.sh)
          echo "version=$version" >> $GITHUB_ENV
          echo "::notice::VERSION = $version"

      - name: Create and push update branch
        run: |
          BRANCH_NAME="bot/rootfs-update-${{ env.version }}"
          echo "branch=$BRANCH_NAME" >> $GITHUB_ENV

          echo "::notice::Creating branch $BRANCH_NAME..."
          git checkout -b "$BRANCH_NAME"

          if git diff --quiet; then
            echo "::notice::No changes to commit. Exiting."
            exit 0
          fi

          echo "::notice::Committing changes..."
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add install-nethunter.sh README.md status.json
          git commit -m "Updated RootFS to version ${{ env.version }}"
          git push --set-upstream origin "$BRANCH_NAME"

          echo "created=true" >> $GITHUB_ENV
          echo "::notice::Changes pushed to $BRANCH_NAME"

      - name: Install GitHub CLI
        run: |
          echo "::notice::Installing GitHub CLI..."
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Authenticate GitHub CLI
        run: |
          echo "::notice::Authenticating gh CLI with GITHUB_TOKEN..."
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Create Pull Request
        if: env.created == 'true'
        run: |
          echo "::notice::Creating pull request from branch ${{ env.branch }}..."
          gh pr create \
            --head "${{ env.branch }}" \
            --base main \
            --title "Update RootFS to version ${{ env.version }}" \
            --body "Automated update of RootFS to version ${{ env.version }}." \
            --label "automated,update"
          echo "::notice::Pull request created successfully."
